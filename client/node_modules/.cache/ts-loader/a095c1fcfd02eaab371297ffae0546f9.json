{"remainingRequest":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\ts-loader\\index.js??ref--14-3!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\js\\States.ts","dependencies":[{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\js\\States.ts","mtime":1632856214376},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\js\\States.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AAGA,OAAO,MAAP,MAAmB,WAAnB;AAEA,SAAS,MAAT,QAAoC,gBAApC;AACA,SAAS,KAAT,QAAsB,eAAtB;AASA,WAAsB,KAAtB;AACE,iBAAqB,gBAArB,EAAuD;AAAA;;AAAlC,SAAA,gBAAA,GAAA,gBAAA;AAAsC;;AAD7D;AAAA;AAAA,WAGE,kBACE;AACA,IAAA,MAFF,EAEoG;AAElG,aAAO,EAAP;AACD;AARH;AAAA;AAAA,WAUE,uCAA2B;AACzB,aAAO,CAAC,CAAR;AACD;AAZH;AAAA;AAAA,WAcY,iCAAwB,OAAxB,EAAiE;AAAA,UAAnB,YAAmB,uEAAJ,IAAI;AACzE,UAAM,SAAS,GAAW,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,2BAAnB,CAAR,GAA0D,GAA7D,GAAmE,CAAzG;AACA,aACE,OAAO,CAAC,CAAR,IAAa,KAAK,gBAAL,CAAsB,QAAtB,IAAkC,IAAI,SAAtC,CAAb,IACA,OAAO,CAAC,CAAR,IAAa,KAAK,gBAAL,CAAsB,OAAtB,IAAiC,IAAI,SAArC,CADb,IAEA,OAAO,CAAC,CAAR,GAAY,OAAO,CAAC,KAApB,IAA6B,KAAK,gBAAL,CAAsB,QAAtB,GAAiC,KAAK,gBAAL,CAAsB,SAAtB,IAAmC,IAAI,SAAvC,CAF9D,IAGA,OAAO,CAAC,CAAR,GAAY,OAAO,CAAC,MAApB,IAA8B,KAAK,gBAAL,CAAsB,OAAtB,GAAgC,KAAK,gBAAL,CAAsB,UAAtB,IAAoC,IAAI,SAAxC,CAJhE;AAMD;AAtBH;AAAA;AAAA,WAwBY,8BAAqB,IAArB,EAAyC;AACjD,aACE,IAAI,CAAC,CAAL,IAAU,KAAK,gBAAL,CAAsB,QAAhC,IACA,IAAI,CAAC,CAAL,IAAU,KAAK,gBAAL,CAAsB,OADhC,IAEA,IAAI,CAAC,CAAL,IAAU,KAAK,gBAAL,CAAsB,QAAtB,GAAiC,KAAK,gBAAL,CAAsB,SAFjE,IAGA,IAAI,CAAC,CAAL,IAAU,KAAK,gBAAL,CAAsB,OAAtB,GAAgC,KAAK,gBAAL,CAAsB,UAJlE;AAMD;AA/BH;;AAAA;AAAA;AAoCA,WAAa,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,mBAAO;AACL,aAAO,SAAS,CAAC,IAAjB;AACD;AALH;;AAAA;AAAA,EAA+B,KAA/B;AACS,SAAA,CAAA,IAAA,GAAO,WAAP;AAOT,WAAa,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,mBAAO;AACL,aAAO,YAAY,CAAC,IAApB;AACD;AALH;;AAAA;AAAA,EAAkC,KAAlC;AACS,YAAA,CAAA,IAAA,GAAO,cAAP;AAOT,WAAa,SAAb;AAAA;;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;;AAGU,UAAA,iBAAA,GAAoB,CAApB;AACA,UAAA,aAAA,GAAgB,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,cAAnB,CAAxB;AAJV;AAqDC;;AArDD;AAAA;AAAA,WAME,iBACE,KADF,EACmG;AAEjG,UAAI,SAAS,GAAU,IAAvB;;AACA,UAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAI,KAAK,uBAAL,CAA6B,KAAK,CAAC,CAAD,CAAL,CAAS,SAAT,CAAmB,GAAhD,CAAJ,EAA0D;AACxD,cAAI,KAAK,oBAAL,CAA0B,KAAK,CAAC,CAAD,CAAL,CAAS,SAAT,CAAmB,SAAnB,CAA6B,KAAK,aAAlC,CAA1B,CAAJ,EAAiF;AAC/E,YAAA,SAAS,GAAG,IAAI,YAAJ,CAAiB,KAAK,gBAAtB,CAAZ;AACD;AACF,SAJD,MAIO;AACL,UAAA,MAAM,CAAC,IAAP,mDAAuD,KAAK,uBAAL,CAA6B,KAAK,CAAC,CAAD,CAAL,CAAS,SAAT,CAAmB,GAAhD,CAAvD;AACA,UAAA,SAAS,GAAG,IAAI,SAAJ,CAAc,KAAK,gBAAnB,CAAZ;AACD;AACF,OATD,MASO;AACL,YACE,KAAK,CAAC,MAAN,KAAiB,CAAjB,IACA,EAAE,KAAK,iBAAP,GAA2B,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,kCAAnB,CAFrC,EAGE;AACA,UAAA,MAAM,CAAC,IAAP,kCAAsC,KAAK,CAAC,MAA5C,gCAAwE,KAAK,iBAA7E;AACA,UAAA,SAAS,GAAG,IAAI,SAAJ,CAAc,KAAK,gBAAnB,CAAZ;AACD,SAND,MAMO;AACL,UAAA,MAAM,CAAC,KAAP;AACD;AACF;;AACD,UAAM,WAAW,GAAgB;AAC/B,QAAA,kBAAkB,EAAE;AAClB,UAAA,QAAQ,EAAE,MAAM,CAAC;AADC,SADW;AAI/B,QAAA,kBAAkB,EAAE;AAClB,UAAA,QAAQ,EAAE,MAAM,CAAC;AADC;AAJW,OAAjC;AAQA,aAAO;AACL,QAAA,SAAS,EAAE,SADN;AAEL,QAAA,WAAW,EAAE,WAFR;AAGL,QAAA,WAAW,EAAE,kDAHR;AAIL,QAAA,mBAAmB,EAAE;AAJhB,OAAP;AAMD;AA5CH;AAAA;AAAA,WA8CE,uCAA2B;AACzB,aAAO,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,8BAAnB,CAAf;AACD;AAhDH;AAAA;AAAA,WAkDE,mBAAO;AACL,aAAO,SAAS,CAAC,IAAjB;AACD;AApDH;;AAAA;AAAA,EAA+B,KAA/B;AACS,SAAA,CAAA,IAAA,GAAO,WAAP;AAsDT,WAAa,SAAb;AAAA;;AAAA;;AAAA,uBAAA;AAAA;;AAAA;;;AAGU,WAAA,iBAAA,GAAoB,CAApB;AAHV;AA8CC;;AA9CD;AAAA;AAAA,WAKE,iBACE,KADF,EACmG;AAEjG,UAAI,SAAS,GAAU,IAAvB;AACA,UAAI,QAAQ,GAAG,MAAM,CAAC,SAAtB;;AACA,UAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAI,KAAK,uBAAL,CAA6B,KAAK,CAAC,CAAD,CAAL,CAAS,SAAT,CAAmB,GAAhD,EAAqD,KAArD,CAAJ,EAAiE;AAC/D,UAAA,QAAQ,GAAG,MAAM,CAAC,WAAlB;AACA,UAAA,SAAS,GAAG,IAAI,SAAJ,CAAc,KAAK,gBAAnB,CAAZ;AACD;AACF,OALD,MAKO;AACL,YACE,KAAK,CAAC,MAAN,KAAiB,CAAjB,IACA,EAAE,KAAK,iBAAP,GAA2B,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,kCAAnB,CAFrC,EAGE;AACA,UAAA,MAAM,CAAC,IAAP,kCAAsC,KAAK,CAAC,MAA5C,gCAAwE,KAAK,iBAA7E;AACA,UAAA,SAAS,GAAG,IAAI,SAAJ,CAAc,KAAK,gBAAnB,CAAZ;AACD,SAND,MAMO;AACL,UAAA,MAAM,CAAC,KAAP;AACD;AACF;;AACD,UAAM,WAAW,GAAgB;AAC/B,QAAA,kBAAkB,EAAE;AAClB,UAAA,QAAQ,EAAE;AADQ;AADW,OAAjC;AAKA,aAAO;AACL,QAAA,SAAS,EAAE,SADN;AAEL,QAAA,WAAW,EAAE,WAFR;AAGL,QAAA,WAAW,EAAE,kCAHR;AAIL,QAAA,mBAAmB,EAAE;AAJhB,OAAP;AAMD;AArCH;AAAA;AAAA,WAuCE,uCAA2B;AACzB,aAAO,QAAQ,CAAC,KAAK,CAAC,SAAN,GAAkB,8BAAnB,CAAf;AACD;AAzCH;AAAA;AAAA,WA2CE,mBAAO;AACL,aAAO,SAAS,CAAC,IAAjB;AACD;AA7CH;;AAAA;AAAA,EAA+B,KAA/B;AACS,SAAA,CAAA,IAAA,GAAO,WAAP;AA+CT,WAAa,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGE,iBACE,KADF,EACmG;AAEjG,UAAI,SAAS,GAAU,IAAvB;AACA,UAAI,WAAW,GAAG,SAAlB;;AACA,cAAQ,KAAK,CAAC,MAAd;AACE,aAAK,CAAL;AACE,UAAA,WAAW,GAAG,uCAAd;AACA;;AACF,aAAK,CAAL;AACE,UAAA,SAAS,GAAG,IAAI,SAAJ,CAAc,KAAK,gBAAnB,CAAZ;AACA;;AACF;AACE,UAAA,WAAW,GAAG,6CAAd;AARJ;;AAUA,UAAM,WAAW,GAAgB;AAC/B,QAAA,kBAAkB,EAAE;AAClB,UAAA,QAAQ,EAAE,MAAM,CAAC;AADC;AADW,OAAjC;AAKA,aAAO;AACL,QAAA,SAAS,EAAE,SADN;AAEL,QAAA,WAAW,EAAE,WAFR;AAGL,QAAA,WAAW,EAAE;AAHR,OAAP;AAKD;AA5BH;AAAA;AAAA,WA8BE,mBAAO;AACL,aAAO,SAAS,CAAC,IAAjB;AACD;AAhCH;;AAAA;AAAA,EAA+B,KAA/B;AACS,SAAA,CAAA,IAAA,GAAO,WAAP","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n// SPDX-License-Identifier: MIT-0\r\n\r\nimport * as faceapi from \"face-api.js\";\r\nimport Logger from \"js-logger\";\r\nimport { ChallengeDetails } from \"@/js/RemoteStarter.ts\";\r\nimport { Drawer, DrawOptions } from \"@/js/Drawer.ts\";\r\nimport { Utils } from \"@/js/Utils.ts\";\r\n\r\nexport interface StateOutput {\r\n  readonly nextState?: State;\r\n  readonly drawOptions?: DrawOptions;\r\n  readonly helpMessage?: string;\r\n  readonly helpAnimationNumber?: number;\r\n}\r\n\r\nexport abstract class State {\r\n  constructor(readonly challengeDetails: ChallengeDetails) {}\r\n\r\n  process(\r\n    // eslint-disable-next-line\r\n    _faces: faceapi.WithFaceLandmarks<{ detection: faceapi.FaceDetection }, faceapi.FaceLandmarks68>[]\r\n  ): StateOutput {\r\n    return {};\r\n  }\r\n\r\n  getMaximumDurationInSeconds(): number {\r\n    return -1;\r\n  }\r\n\r\n  protected isFaceBoxInsideFaceArea(faceBox: faceapi.Box, addTolerance = true) {\r\n    const tolerance: number = addTolerance ? parseInt(Utils.getConfig().FACE_AREA_TOLERANCE_PERCENT) / 100 : 0;\r\n    return (\r\n      faceBox.x >= this.challengeDetails.areaLeft * (1 - tolerance) &&\r\n      faceBox.y >= this.challengeDetails.areaTop * (1 - tolerance) &&\r\n      faceBox.x + faceBox.width <= this.challengeDetails.areaLeft + this.challengeDetails.areaWidth * (1 + tolerance) &&\r\n      faceBox.y + faceBox.height <= this.challengeDetails.areaTop + this.challengeDetails.areaHeight * (1 + tolerance)\r\n    );\r\n  }\r\n\r\n  protected isNoseInsideNoseArea(nose: faceapi.IPoint) {\r\n    return (\r\n      nose.x >= this.challengeDetails.noseLeft &&\r\n      nose.y >= this.challengeDetails.noseTop &&\r\n      nose.x <= this.challengeDetails.noseLeft + this.challengeDetails.noseWidth &&\r\n      nose.y <= this.challengeDetails.noseTop + this.challengeDetails.noseHeight\r\n    );\r\n  }\r\n\r\n  abstract getName(): string;\r\n}\r\n\r\nexport class FailState extends State {\r\n  static NAME = \"FailState\";\r\n\r\n  getName(): string {\r\n    return FailState.NAME;\r\n  }\r\n}\r\n\r\nexport class SuccessState extends State {\r\n  static NAME = \"SuccessState\";\r\n\r\n  getName(): string {\r\n    return SuccessState.NAME;\r\n  }\r\n}\r\n\r\nexport class NoseState extends State {\r\n  static NAME = \"NoseState\";\r\n\r\n  private framesWithoutFace = 0;\r\n  private landmarkIndex = parseInt(Utils.getConfig().LANDMARK_INDEX);\r\n\r\n  process(\r\n    faces: faceapi.WithFaceLandmarks<{ detection: faceapi.FaceDetection }, faceapi.FaceLandmarks68>[]\r\n  ): StateOutput {\r\n    let nextState: State = this;\r\n    if (faces.length === 1) {\r\n      if (this.isFaceBoxInsideFaceArea(faces[0].detection.box)) {\r\n        if (this.isNoseInsideNoseArea(faces[0].landmarks.positions[this.landmarkIndex])) {\r\n          nextState = new SuccessState(this.challengeDetails);\r\n        }\r\n      } else {\r\n        Logger.info(`NoseState fail: isFaceBoxInsideFaceArea=${this.isFaceBoxInsideFaceArea(faces[0].detection.box)}`);\r\n        nextState = new FailState(this.challengeDetails);\r\n      }\r\n    } else {\r\n      if (\r\n        faces.length !== 0 ||\r\n        ++this.framesWithoutFace > parseInt(Utils.getConfig().STATE_NOSE_MAX_FRAMES_WITHOUT_FACE)\r\n      ) {\r\n        Logger.info(`NoseState fail: #faces=${faces.length} framesWithoutFace=${this.framesWithoutFace}`);\r\n        nextState = new FailState(this.challengeDetails);\r\n      } else {\r\n        Logger.debug(`no face detected. Skipping frame...`);\r\n      }\r\n    }\r\n    const drawOptions: DrawOptions = {\r\n      faceDrawBoxOptions: {\r\n        boxColor: Drawer.COLOR_GREEN\r\n      },\r\n      noseDrawBoxOptions: {\r\n        boxColor: Drawer.COLOR_YELLOW\r\n      }\r\n    };\r\n    return {\r\n      nextState: nextState,\r\n      drawOptions: drawOptions,\r\n      helpMessage: \"Move the tip of your nose inside the yellow area\",\r\n      helpAnimationNumber: 2\r\n    };\r\n  }\r\n\r\n  getMaximumDurationInSeconds(): number {\r\n    return parseInt(Utils.getConfig().STATE_NOSE_DURATION_IN_SECONDS);\r\n  }\r\n\r\n  getName(): string {\r\n    return NoseState.NAME;\r\n  }\r\n}\r\n\r\nexport class AreaState extends State {\r\n  static NAME = \"AreaState\";\r\n\r\n  private framesWithoutFace = 0;\r\n\r\n  process(\r\n    faces: faceapi.WithFaceLandmarks<{ detection: faceapi.FaceDetection }, faceapi.FaceLandmarks68>[]\r\n  ): StateOutput {\r\n    let nextState: State = this;\r\n    let boxColor = Drawer.COLOR_RED;\r\n    if (faces.length === 1) {\r\n      if (this.isFaceBoxInsideFaceArea(faces[0].detection.box, false)) {\r\n        boxColor = Drawer.COLOR_GREEN;\r\n        nextState = new NoseState(this.challengeDetails);\r\n      }\r\n    } else {\r\n      if (\r\n        faces.length !== 0 ||\r\n        ++this.framesWithoutFace > parseInt(Utils.getConfig().STATE_AREA_MAX_FRAMES_WITHOUT_FACE)\r\n      ) {\r\n        Logger.info(`AreaState fail: #faces=${faces.length} framesWithoutFace=${this.framesWithoutFace}`);\r\n        nextState = new FailState(this.challengeDetails);\r\n      } else {\r\n        Logger.debug(`no face detected. Skipping frame...`);\r\n      }\r\n    }\r\n    const drawOptions: DrawOptions = {\r\n      faceDrawBoxOptions: {\r\n        boxColor: boxColor\r\n      }\r\n    };\r\n    return {\r\n      nextState: nextState,\r\n      drawOptions: drawOptions,\r\n      helpMessage: \"Center your face inside the area\",\r\n      helpAnimationNumber: 1\r\n    };\r\n  }\r\n\r\n  getMaximumDurationInSeconds(): number {\r\n    return parseInt(Utils.getConfig().STATE_AREA_DURATION_IN_SECONDS);\r\n  }\r\n\r\n  getName(): string {\r\n    return AreaState.NAME;\r\n  }\r\n}\r\n\r\nexport class FaceState extends State {\r\n  static NAME = \"FaceState\";\r\n\r\n  process(\r\n    faces: faceapi.WithFaceLandmarks<{ detection: faceapi.FaceDetection }, faceapi.FaceLandmarks68>[]\r\n  ): StateOutput {\r\n    let nextState: State = this;\r\n    let helpMessage = undefined;\r\n    switch (faces.length) {\r\n      case 0:\r\n        helpMessage = \"No face detected. Look at the camera.\";\r\n        break;\r\n      case 1:\r\n        nextState = new AreaState(this.challengeDetails);\r\n        break;\r\n      default:\r\n        helpMessage = \"More than one face detected. Should be one.\";\r\n    }\r\n    const drawOptions: DrawOptions = {\r\n      faceDrawBoxOptions: {\r\n        boxColor: Drawer.COLOR_RED\r\n      }\r\n    };\r\n    return {\r\n      nextState: nextState,\r\n      drawOptions: drawOptions,\r\n      helpMessage: helpMessage\r\n    };\r\n  }\r\n\r\n  getName(): string {\r\n    return FaceState.NAME;\r\n  }\r\n}\r\n"],"sourceRoot":""}]}