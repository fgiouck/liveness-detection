{"remainingRequest":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\App.vue","mtime":1632856214362},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNhcHAgew0KICBtYXJnaW46IDE1cHg7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!--\r\nCopyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\nSPDX-License-Identifier: MIT-0\r\n-->\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <Welcome\r\n      v-if=\"step === 1\"\r\n      :ready=\"mediaStreamReady\"\r\n      @challenge-details=\"onChallengeDetails($event)\"\r\n      @error=\"onError($event)\"\r\n    />\r\n    <Challenge\r\n      v-else-if=\"step === 2\"\r\n      :details=\"challengeDetails\"\r\n      @local-success=\"onLocalSuccess($event)\"\r\n      @local-fail=\"onLocalFail()\"\r\n      @error=\"onError($event)\"\r\n    />\r\n    <Spinner v-else-if=\"step === 3\" />\r\n    <Result v-else-if=\"step === 4\" :success=\"success\" @restart=\"onRestart()\" />\r\n    <Error v-else-if=\"step === -1\" :message=\"errorMessage\" @restart=\"onRestart()\" />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\";\r\nimport Challenge from \"./components/Challenge.vue\";\r\nimport Spinner from \"./components/Spinner.vue\";\r\nimport Welcome from \"./components/Welcome.vue\";\r\nimport Result from \"./components/Result.vue\";\r\nimport Error from \"./components/Error.vue\";\r\nimport { ChallengeDetails } from \"@/js/RemoteStarter.ts\";\r\nimport { ChallengeProcessor } from \"@/js/ChallengeProcessor.ts\";\r\nimport { RemoteVerifier } from \"@/js/RemoteVerifier.ts\";\r\nimport { Utils } from \"@/js/Utils.ts\";\r\n\r\nUtils.loadConfig();\r\nUtils.configureLogger();\r\n\r\nexport default Vue.extend({\r\n  name: \"App\",\r\n  components: {\r\n    Welcome,\r\n    Challenge,\r\n    Spinner,\r\n    Result,\r\n    Error\r\n  },\r\n  data() {\r\n    return {\r\n      challengeDetails: {},\r\n      success: false,\r\n      step: 1,\r\n      mediaStreamReady: false,\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    onChallengeDetails(challengeDetails: ChallengeDetails): void {\r\n      this.challengeDetails = challengeDetails;\r\n      this.step = 2;\r\n    },\r\n    onLocalSuccess(remoteVerifier: RemoteVerifier): void {\r\n      this.step = 3;\r\n\r\n      const self = this;\r\n      remoteVerifier.verify(\r\n        function(success: boolean) {\r\n          self.success = success;\r\n          self.step = 4;\r\n        },\r\n        function(error: Error) {\r\n          self.onError(error);\r\n        }\r\n      );\r\n    },\r\n    onLocalFail(): void {\r\n      this.success = false;\r\n      this.step = 4;\r\n    },\r\n    onRestart(): void {\r\n      this.step = 1;\r\n    },\r\n    onError(error: Error): void {\r\n      this.errorMessage = error.name + \": \" + error.message;\r\n      this.step = -1;\r\n    }\r\n  },\r\n  mounted: function() {\r\n    ChallengeProcessor.loadModels();\r\n\r\n    const self = this;\r\n    Utils.loadMediaStream(\r\n      function() {\r\n        self.mediaStreamReady = true;\r\n      },\r\n      function(message) {\r\n        self.errorMessage = message;\r\n        self.step = -1;\r\n      }\r\n    );\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  margin: 15px;\r\n}\r\n</style>\r\n"]}]}