{"remainingRequest":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\components\\Challenge.vue?vue&type=style&index=0&id=3d4ee5b2&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\src\\components\\Challenge.vue","mtime":1632856214369},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gio\\Desktop\\work\\liveness\\liveness-detection\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI3dlYmNhbVZpZGVvIHsNCiAgd2lkdGg6IHZhcigtLXZpZGVvLXdpZHRoKTsNCiAgaGVpZ2h0OiB2YXIoLS12aWRlby1oZWlnaHQpOw0KfQ0KI3dlYmNhbVZpZGVvLA0KI292ZXJsYXlDYW52YXMgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQp9DQoucm90YXRlIHsNCiAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7DQp9DQoudmlkZW9Db250YWluZXIgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHdpZHRoOiB2YXIoLS12aWRlby13aWR0aCk7DQp9DQouaGVscENvbnRhaW5lciB7DQogIHBhZGRpbmctdG9wOiB2YXIoLS1oZWxwLWNvbnRhaW5lci1wYWRkaW5nLXRvcCk7DQp9DQoubWVzc2FnZUNvbnRhaW5lciB7DQogIGhlaWdodDogMTAwcHg7DQogIGRpc3BsYXk6IHRhYmxlOw0KfQ0KLm1lc3NhZ2Ugew0KICBkaXNwbGF5OiB0YWJsZS1jZWxsOw0KICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KfQ0K"},{"version":3,"sources":["Challenge.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Challenge.vue","sourceRoot":"src/components","sourcesContent":["<!--\r\nCopyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\nSPDX-License-Identifier: MIT-0\r\n-->\r\n\r\n<template>\r\n  <div class=\"videoContainer mx-auto\" :style=\"cssVars\">\r\n    <video\r\n      id=\"webcamVideo\"\r\n      :class=\"{ rotate: shouldRotate }\"\r\n      :width=\"videoWidth\"\r\n      :height=\"videoHeight\"\r\n      autoplay\r\n      muted\r\n      playsinline\r\n    ></video>\r\n    <canvas id=\"overlayCanvas\" :class=\"{ rotate: shouldRotate }\" :width=\"videoWidth\" :height=\"videoHeight\" />\r\n    <div class=\"helpContainer clearfix\">\r\n      <div class=\"float-left messageContainer\">\r\n        <div class=\"message\">\r\n          <h5>{{ message }}</h5>\r\n        </div>\r\n      </div>\r\n      <div class=\"float-right\">\r\n        <lottie v-show=\"animation === 1\" :options=\"lottieOptions1\" :height=\"100\" :width=\"100\" />\r\n        <lottie v-show=\"animation === 2\" :options=\"lottieOptions2\" :height=\"100\" :width=\"100\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\";\r\nimport Lottie from \"vue-lottie\";\r\nimport * as help1 from \"@/assets/lottie/help1.json\";\r\nimport * as help2 from \"@/assets/lottie/help2.json\";\r\nimport { ChallengeDetails } from \"@/js/RemoteStarter.ts\";\r\nimport { ChallengeProcessor } from \"@/js/ChallengeProcessor.ts\";\r\nimport { RemoteVerifier } from \"@/js/RemoteVerifier.ts\";\r\nimport { Utils } from \"@/js/Utils.ts\";\r\n\r\nexport default Vue.extend({\r\n  name: \"Challenge\",\r\n  components: {\r\n    Lottie\r\n  },\r\n  props: {\r\n    details: Object\r\n  },\r\n  data() {\r\n    return {\r\n      message: \"Loading...\",\r\n      animation: -1,\r\n      // @ts-ignore\r\n      lottieOptions1: { animationData: help1.default },\r\n      // @ts-ignore\r\n      lottieOptions2: { animationData: help2.default },\r\n\r\n      videoWidth: Utils.getMediaStreamInfo().actualWidth,\r\n      videoHeight: Utils.getMediaStreamInfo().actualHeight,\r\n      shouldRotate: Utils.getConfigBooleanValue(\"FLIP_VIDEO\"),\r\n      // Ugly hack to pass variables to CSS\r\n      cssVars: {\r\n        \"--video-width\": Utils.getMediaStreamInfo().actualWidth + \"px\",\r\n        \"--video-height\": Utils.getMediaStreamInfo().actualHeight + \"px\",\r\n        \"--help-container-padding-top\": Utils.getMediaStreamInfo().actualHeight + 5 + \"px\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    onLocalEnd(success: boolean, remoteVerifier: RemoteVerifier | undefined): void {\r\n      if (success) {\r\n        this.$emit(\"local-success\", remoteVerifier as RemoteVerifier);\r\n      } else {\r\n        this.$emit(\"local-fail\");\r\n      }\r\n    },\r\n    onHelpMessage(message: string | undefined): void {\r\n      this.message = message || \"\";\r\n    },\r\n    onHelpAnimation(animationNumber: number | undefined): void {\r\n      this.animation = animationNumber || -1;\r\n    }\r\n  },\r\n  mounted: function() {\r\n    const self: any = this;\r\n    this.$nextTick(function() {\r\n      new ChallengeProcessor(\r\n        self.details as ChallengeDetails,\r\n        \"webcamVideo\",\r\n        \"overlayCanvas\",\r\n        self.onLocalEnd,\r\n        self.onHelpMessage,\r\n        self.onHelpAnimation\r\n      );\r\n    });\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n#webcamVideo {\r\n  width: var(--video-width);\r\n  height: var(--video-height);\r\n}\r\n#webcamVideo,\r\n#overlayCanvas {\r\n  position: absolute;\r\n}\r\n.rotate {\r\n  transform: rotateY(180deg);\r\n}\r\n.videoContainer {\r\n  position: relative;\r\n  width: var(--video-width);\r\n}\r\n.helpContainer {\r\n  padding-top: var(--help-container-padding-top);\r\n}\r\n.messageContainer {\r\n  height: 100px;\r\n  display: table;\r\n}\r\n.message {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n</style>\r\n"]}]}